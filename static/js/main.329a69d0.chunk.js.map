{"version":3,"sources":["components/Header.jsx","components/Sidebar.jsx","components/Todo.jsx","components/Todolist.jsx","components/ProjectModal.jsx","components/TodoModal.jsx","components/Modal.jsx","js/Project.js","js/ProjectHandler.js","js/Todo.js","App.jsx","index.jsx"],"names":["Header","props","project","editProject","className","title","desc","type","onClick","Sidebar","projects","changeProject","activeIndex","addProject","map","index","data-project-id","Todo","todoClasses","checkbox","todo","editTodo","saveEditTodo","active","dueDate","handleTodoClick","event","preventDefault","toggleActive","onKeyDown","tabIndex","role","aria-checked","aria-label","checked","aria-hidden","moment","format","Todolist","addTodo","todos","ProjectModal","projectInfo","discardProject","saveNewProject","saveEditProject","useState","newProject","setNewProject","handleInput","target","value","name","htmlFor","id","onChange","TodoModal","todoInfo","discardTodo","saveNewTodo","Date","newTodo","setNewTodo","Modal","todoFlag","projectFlag","discardModal","Project","args","this","push","todoIndex","newTitle","newDesc","splice","ProjectHandler","projectIndex","undefined","Error","deleteTodo","App","projectHandler","setProjectHandler","activeProjectIndex","setActiveProject","todoModalFlag","setTodoModalFlag","editTodoFlag","setEditTodoFlag","projectModalFlag","setProjectModalFlag","editProjectFlag","setEditProjectFlag","appendProject","newIndex","parseInt","dataset","projectId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.329a69d0.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) => {\n  const { project, editProject } = props;\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__pageinfo\">\n        <span className=\"header__title\">Projects</span>\n      </div>\n      <div className=\"current-project\">\n        <div className=\"current-project__info\">\n          <span className=\"current-project__title\">{project.title}</span>\n          <span className=\"current-project__desc\">{project.desc}</span>\n        </div>\n        <button type=\"button\" className=\"btn current-project__edit\" onClick={editProject}>Edit</button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nconst Sidebar = (props) => {\n  const {\n    projects, changeProject, activeIndex, addProject,\n  } = props;\n\n  return (\n    <div className=\"sidebar\">\n      <button type=\"button\" className=\"btn sidebar__new-project\" onClick={addProject}>New Project</button>\n      <div className=\"sidebar__projectlist\">\n        {/* map all the projects into buttons on the sidebar */}\n        { projects.map((project, index) => {\n          if (index === activeIndex) {\n            // highlight the current project\n            return (\n              <button\n                type=\"button\"\n                className=\"btn sidebar__project sidebar__project--active\"\n                data-project-id={index}\n              >\n                {project.title}\n              </button>\n            );\n          }\n\n          return (\n            <button\n              type=\"button\"\n              className=\"btn sidebar__project\"\n              data-project-id={index}\n              onClick={changeProject}\n            >\n              {project.title}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\nexport default Sidebar;\n","import React from 'react';\nimport moment from 'moment';\n\nconst Todo = (props) => {\n  const {\n    todo, editTodo, index, saveEditTodo,\n  } = props;\n  const {\n    active, title, desc, dueDate,\n  } = todo;\n\n  const handleTodoClick = (event) => {\n    event.preventDefault();\n    editTodo(index);\n  };\n\n  const toggleActive = (event) => {\n    event.preventDefault();\n    saveEditTodo(index, {\n      active: !active, title, desc, dueDate,\n    });\n  };\n\n  let todoClasses;\n  let checkbox;\n\n  if (!active) {\n    todoClasses = 'todo todo--done';\n    checkbox = (\n      <div\n        className=\"todo__check  todo__check--checked\"\n        onClick={toggleActive}\n        onKeyDown={toggleActive}\n        tabIndex=\"0\"\n        role=\"checkbox\"\n        aria-checked=\"true\"\n        aria-label=\"Toggle Todo\"\n        checked\n      >\n        🗸\n      </div>\n\n    );\n  } else {\n    todoClasses = 'todo';\n    checkbox = (\n      <div\n        className=\"todo__check\"\n        onClick={toggleActive}\n        onKeyDown={toggleActive}\n        tabIndex=\"0\"\n        role=\"checkbox\"\n        aria-checked=\"false\"\n        aria-label=\"Toggle Todo\"\n      />\n    );\n    // eslint-disable-next-line quotes\n  }\n\n  return (\n    <div\n      className={todoClasses}\n      role=\"button\"\n      tabIndex=\"0\"\n      aria-hidden=\"true\"\n    >\n      {checkbox}\n      <span\n        onClick={handleTodoClick}\n        role=\"button\"\n        aria-hidden=\"true\"\n        className=\"todo__title\"\n      >\n        {title}\n      </span>\n      <span\n        onClick={handleTodoClick}\n        role=\"button\"\n        aria-hidden=\"true\"\n        className=\"todo__description\"\n      >\n        {desc}\n      </span>\n      <span\n        onClick={handleTodoClick}\n        role=\"button\"\n        aria-hidden=\"true\"\n        className=\"todo__due-date\"\n      >\n        {moment(dueDate).format('YYYY-MM-DD')}\n      </span>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nconst Todolist = (props) => {\n  const {\n    project, addTodo, editTodo, saveEditTodo,\n  } = props;\n  const { todos } = project;\n  return (\n    <div className=\"todolist\">\n      {todos.map((todo, index) => (\n        <Todo\n          todo={todo}\n          index={index}\n          editTodo={editTodo}\n          saveEditTodo={saveEditTodo}\n          // eslint-disable-next-line react/no-array-index-key\n          key={index}\n        />\n      ))}\n      <button\n        type=\"button\"\n        className=\"btn todolist__add-todo\"\n        onClick={addTodo}\n      >\n        Add Todo\n      </button>\n    </div>\n  );\n};\n\nexport default Todolist;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\n\nconst ProjectModal = (props) => {\n  const {\n    projectInfo, discardProject, saveNewProject, saveEditProject,\n  } = props;\n  const { title = 'Todo List', desc = 'Chores to be done', todos } = projectInfo;\n  const [newProject, setNewProject] = useState({ title, desc });\n\n  // lets the user change the various inputs\n  // must be done like this since the inputs are states\n  const handleInput = (event) => {\n    const { value, name } = event.target;\n    setNewProject({ ...newProject, [name]: value });\n  };\n\n  // passes the new project up the chain to App\n  // const newProjectEvent = () => {\n  //   saveNewProject({ title, desc, todos: [] });\n  // };\n\n  const submitPress = () => {\n    if (saveNewProject) {\n      saveNewProject({ title, desc, todos: [] });\n      return;\n    }\n    saveEditProject({ ...newProject, todos });\n  };\n\n  return (\n    <div className=\"modal__content\">\n      <div className=\"modal__header\">Project:</div>\n      <div className=\"modal__form\">\n        <label className=\"modal__label\" htmlFor=\"project-title-input\">Title:</label>\n        <input\n          className=\"modal__input\"\n          type=\"text\"\n          name=\"title\"\n          id=\"project-title-input\"\n          value={newProject.title}\n          onChange={handleInput}\n        />\n        <label className=\"modal__label\" htmlFor=\"project-desc-input\">Desc:</label>\n        <input\n          className=\"modal__input\"\n          type=\"text\"\n          name=\"desc\"\n          id=\"project-desc-input\"\n          value={newProject.desc}\n          onChange={handleInput}\n        />\n      </div>\n      <div className=\"modal__btns\">\n        <button type=\"button\" className=\"btn modal__submit\" onClick={submitPress}>Submit</button>\n        <button type=\"button\" className=\"btn modal__discard\" onClick={discardProject}>Discard</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectModal;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport moment from 'moment';\n\nconst TodoModal = (props) => {\n  const {\n    todoInfo, index, discardTodo, saveNewTodo, saveEditTodo,\n  } = props;\n  const { title = 'Todo', desc = 'Description', dueDate = new Date() } = todoInfo;\n  const [newTodo, setNewTodo] = useState({ title, desc, dueDate: moment(dueDate).format('YYYY-MM-DD') });\n\n  // input values are saved in a state\n  // change them through firing an event on changing the input\n  const handleInput = (event) => {\n    const { value, name } = event.target;\n    setNewTodo({ ...newTodo, [name]: value });\n  };\n\n  // const saveTodo = () => {\n  //   // have to send the raw unformatted date to the Todo class\n  //   saveNewTodo({ ...newTodo, dueDate: moment(dueDate) });\n  // };\n\n  const handleSubmit = () => {\n    if (saveNewTodo) {\n      saveNewTodo({ ...newTodo, dueDate: moment(dueDate) });\n      return;\n    }\n    saveEditTodo(index, { ...newTodo, dueDate: moment(newTodo.dueDate) });\n  };\n\n  return (\n    <div className=\"modal__content\">\n      <div className=\"modal__header\">Todo:</div>\n      <div className=\"modal__form\">\n        <label className=\"modal__label\" htmlFor=\"todo-title-input\">Title:</label>\n        <input\n          className=\"modal__input\"\n          name=\"title\"\n          type=\"text\"\n          value={newTodo.title}\n          id=\"todo-title-input\"\n          onChange={handleInput}\n        />\n        <label className=\"modal__label\" htmlFor=\"todo-desc-input\">Description:</label>\n        <input\n          className=\"modal__input\"\n          name=\"desc\"\n          type=\"text\"\n          value={newTodo.desc}\n          id=\"todo-desc-input\"\n          onChange={handleInput}\n        />\n        <label className=\"modal__label\" htmlFor=\"todo-date-input\">Due Date:</label>\n        <input\n          className=\"modal__input\"\n          name=\"dueDate\"\n          type=\"date\"\n          value={newTodo.dueDate}\n          id=\"todo-date-input\"\n          onChange={handleInput}\n        />\n      </div>\n      <div className=\"modal__btns\">\n        <button type=\"button\" className=\"btn modal__submit\" onClick={handleSubmit}>Submit</button>\n        <button type=\"button\" className=\"btn modal__discard\" onClick={discardTodo}>Discard</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TodoModal;\n","import React from 'react';\nimport ProjectModal from './ProjectModal';\nimport TodoModal from './TodoModal';\n\nconst Modal = (props) => {\n  const {\n    todoFlag, projectFlag, discardModal, saveNewTodo,\n    saveNewProject, saveEditProject, index, saveEditTodo,\n  } = props;\n  // display the todo Modal\n  if (todoFlag) {\n    const { todoInfo = {} } = props;\n    return (\n      <div className=\"modal\">\n        <TodoModal\n          todoInfo={todoInfo}\n          index={index}\n          discardTodo={discardModal}\n          saveNewTodo={saveNewTodo}\n          saveEditTodo={saveEditTodo}\n        />\n      </div>\n    );\n  }\n  const { projectInfo = {} } = props;\n  // display the project modal\n  if (projectFlag) {\n    return (\n      <div className=\"modal\">\n        <ProjectModal\n          projectInfo={projectInfo}\n          discardProject={discardModal}\n          saveNewProject={saveNewProject}\n          saveEditProject={saveEditProject}\n        />\n      </div>\n    );\n  }\n  return null;\n};\n\nexport default Modal;\n","class Project {\n  constructor(args = {}) {\n    const {\n      todos = [], title = 'Project', desc = 'Project Description',\n    } = args;\n    this.todos = todos;\n    this.title = title;\n    this.desc = desc;\n  }\n\n  addTodo(todo) {\n    this.todos.push(todo);\n    return new Project({\n      todos: this.todos, title: this.title, desc: this.desc,\n    });\n  }\n\n  editTodo(todoIndex, newTodo) {\n    this.todos[todoIndex] = newTodo;\n    return new Project({\n      todos: this.todos, title: this.title, desc: this.desc,\n    });\n  }\n\n  editTitle(newTitle) {\n    return new Project({\n      todos: this.todos, title: newTitle, desc: this.desc,\n    });\n  }\n\n  editDesc(newDesc) {\n    return new Project({\n      todos: this.todos, title: this.title, desc: newDesc,\n    });\n  }\n\n  deleteTodo(todoIndex) {\n    this.todos.splice(todoIndex, 1);\n    return new Project({\n      todos: this.todos, title: this.title, desc: this.desc,\n    });\n  }\n}\n\nexport default Project;\n","import Project from './Project';\n\nclass ProjectHandler {\n  constructor(projects = [new Project()]) {\n    this.projects = projects;\n  }\n\n  appendProject(projectInfo = ({ title: 'Project', desc: 'Project Description', todos: [] })) {\n    const newProject = new Project(projectInfo);\n    this.projects.push(newProject);\n    return new ProjectHandler(this.projects);\n  }\n\n  editProject(projectIndex, projectInfo) {\n    const { todos } = this.projects[projectIndex];\n    const newProject = new Project({ ...projectInfo, todos });\n    this.projects.splice(projectIndex, 1, newProject);\n    return new ProjectHandler(this.projects);\n  }\n\n  deleteProject(projectIndex) {\n    if (projectIndex === undefined) {\n      throw new Error('Undefined Project Index');\n    }\n    // have to do this in two lines because\n    // splice will return the spliced out element\n    this.projects.splice(projectIndex, 1);\n    return new ProjectHandler(this.projects);\n  }\n\n  addTodo(projectIndex, newTodo) {\n    const newProject = this.projects[projectIndex].addTodo(newTodo);\n    this.projects.splice(projectIndex, 1, newProject);\n    return new ProjectHandler(this.projects);\n  }\n\n  removeTodo(projectIndex, todoIndex) {\n    const newProject = this.projects[projectIndex].deleteTodo(todoIndex);\n    this.projects.splice(projectIndex, 1, newProject);\n    return new ProjectHandler(this.projects);\n  }\n\n  editTodo(projectIndex, todoIndex, newTodo) {\n    const newProject = this.projects[projectIndex].editTodo(todoIndex, newTodo);\n    this.projects.splice(projectIndex, 1, newProject);\n    return new ProjectHandler(this.projects);\n  }\n}\n\nexport default ProjectHandler;\n","import moment from 'moment';\n\nclass Todo {\n  constructor(props) {\n    // todo will store the unformatted datetime object\n    if (!props) {\n      this.active = true;\n      this.title = 'New Todo';\n      this.desc = 'Todo Description';\n      this.dueDate = moment();\n      return;\n    }\n    const {\n      active = true, title = 'New Todo', desc = 'Todo Description', dueDate = moment(),\n    } = props;\n    this.active = active;\n    this.title = title;\n    this.desc = desc;\n    this.dueDate = dueDate;\n  }\n}\n\nexport default Todo;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Todolist from './components/Todolist';\nimport Modal from './components/Modal';\nimport ProjectHandler from './js/ProjectHandler';\nimport Todo from './js/Todo';\n\nconst App = () => {\n  // setup all the states\n  const [projectHandler, setProjectHandler] = useState(new ProjectHandler());\n  const [activeProjectIndex, setActiveProject] = useState(0);\n  const [todoModalFlag, setTodoModalFlag] = useState(false);\n  const [editTodoFlag, setEditTodoFlag] = useState(false);\n  const [projectModalFlag, setProjectModalFlag] = useState(false);\n  const [editProjectFlag, setEditProjectFlag] = useState(false);\n\n  // open the todo edit/new modal\n  const addTodo = () => setTodoModalFlag(true);\n  const editTodo = (index) => {\n    const todoInfo = projectHandler.projects[activeProjectIndex].todos[index];\n    setEditTodoFlag({ index, todoInfo });\n  };\n\n  // open to new project modal\n  const addProject = () => setProjectModalFlag(true);\n  const editProject = () => setEditProjectFlag(true);\n\n  // stop rendering modals\n  const discardModal = () => {\n    setTodoModalFlag(false);\n    setEditTodoFlag(false);\n    setProjectModalFlag(false);\n    setEditProjectFlag(false);\n  };\n\n  // save a brand new todo in the current project\n  const saveNewTodo = (todoInfo) => {\n    const { title, desc, dueDate } = todoInfo;\n    setProjectHandler(\n      projectHandler.addTodo(activeProjectIndex, new Todo({ title, desc, dueDate })),\n    );\n    discardModal();\n  };\n\n  const saveEditTodo = (todoIndex, todoInfo) => {\n    const newTodo = new Todo(todoInfo);\n    setProjectHandler(\n      projectHandler.editTodo(activeProjectIndex, todoIndex, newTodo),\n    );\n    discardModal();\n  };\n\n  // appends the project to the app\n  const saveNewProject = (projectInfo) => {\n    setProjectHandler(\n      projectHandler.appendProject(projectInfo),\n    );\n    discardModal();\n  };\n\n  const saveEditProject = (projectInfo) => {\n    setProjectHandler(\n      projectHandler.editProject(activeProjectIndex, projectInfo),\n    );\n    discardModal();\n  };\n\n  // swaps the current active project\n  const changeProject = (event) => {\n    const newIndex = parseInt(event.target.dataset.projectId, 10);\n    setActiveProject(newIndex);\n  };\n\n  return (\n    <div className=\"page\">\n      {/* if the todo modal flag, render it */}\n      { todoModalFlag\n        ? (\n          <Modal\n            todoFlag\n            discardModal={discardModal}\n            saveNewTodo={saveNewTodo}\n          />\n        )\n        : null }\n      { editTodoFlag\n        ? (\n          <Modal\n            todoFlag\n            discardModal={discardModal}\n            index={editTodoFlag.index}\n            todoInfo={editTodoFlag.todoInfo}\n            saveEditTodo={saveEditTodo}\n            // TODO\n            // todoInfo{todoInfo}\n          />\n        )\n        : null }\n      {/* if the projectModalFlag, render the modal */}\n      { projectModalFlag\n        ? (\n          <Modal\n            projectFlag\n            discardModal={discardModal}\n            saveNewProject={saveNewProject}\n          />\n        )\n        : null }\n      { editProjectFlag\n        ? (\n          <Modal\n            projectFlag\n            discardModal={discardModal}\n            saveEditProject={saveEditProject}\n            projectInfo={projectHandler.projects[activeProjectIndex]}\n          />\n        )\n        : null}\n      <Header\n        project={projectHandler.projects[activeProjectIndex]}\n        editProject={editProject}\n      />\n      <div className=\"content\">\n        <Sidebar\n          projects={projectHandler.projects}\n          activeIndex={activeProjectIndex}\n          changeProject={changeProject}\n          addProject={addProject}\n        />\n        <Todolist\n          project={projectHandler.projects[activeProjectIndex]}\n          addTodo={addTodo}\n          editTodo={editTodo}\n          saveEditTodo={saveEditTodo}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}